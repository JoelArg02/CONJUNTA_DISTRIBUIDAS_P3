apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  namespace: distribuidas-conjunta
data:
  POSTGRES_USER: "postgres"
  POSTGRES_DB: "postgres"
  POSTGRES_HOST: "postgresql-service.distribuidas-conjunta.svc.cluster.local"
  POSTGRES_PORT: "5432"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: distribuidas-conjunta
data:
  MYSQL_DATABASE: "inventory_db"
  MYSQL_HOST: "mysql-service.distribuidas-conjunta.svc.cluster.local"
  MYSQL_PORT: "3306"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: distribuidas-conjunta
data:
  RABBITMQ_HOST: "rabbitmq-service.distribuidas-conjunta.svc.cluster.local"
  RABBITMQ_PORT: "5672"
  RABBITMQ_USERNAME: "admin"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-init-scripts
  namespace: distribuidas-conjunta
data:
  01-create-databases.sh: |
    #!/bin/bash
    set -e
    
    echo "Creando bases de datos para los microservicios..."
    
    # Crear base de datos billing_db si no existe
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        DO \$\$
        BEGIN
            IF NOT EXISTS (SELECT 1 FROM pg_database WHERE datname = 'billing_db') THEN
                CREATE DATABASE billing_db;
                RAISE NOTICE 'Base de datos billing_db creada exitosamente';
            ELSE
                RAISE NOTICE 'Base de datos billing_db ya existe';
            END IF;
        END
        \$\$;
    EOSQL
    
    # Crear base de datos central_db si no existe
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        DO \$\$
        BEGIN
            IF NOT EXISTS (SELECT 1 FROM pg_database WHERE datname = 'central_db') THEN
                CREATE DATABASE central_db;
                RAISE NOTICE 'Base de datos central_db creada exitosamente';
            ELSE
                RAISE NOTICE 'Base de datos central_db ya existe';
            END IF;
        END
        \$\$;
    EOSQL
    
    echo "✅ Inicialización de PostgreSQL completada"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-scripts
  namespace: distribuidas-conjunta
data:
  01-create-database.sql: |
    -- Script de inicialización para MySQL
    -- Crear base de datos para el microservicio inventory
    
    CREATE DATABASE IF NOT EXISTS inventory_db
      CHARACTER SET utf8mb4
      COLLATE utf8mb4_unicode_ci;
    
    -- Asegurar permisos para root
    GRANT ALL PRIVILEGES ON inventory_db.* TO 'root'@'%';
    FLUSH PRIVILEGES;
    
    -- Verificar que la base de datos se creó
    USE inventory_db;
    SELECT 'Base de datos inventory_db creada exitosamente' AS status;
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: distribuidas-conjunta
type: Opaque
data:
  POSTGRES_PASSWORD: cm9vdHBhc3N3b3Jk # rootpassword
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: distribuidas-conjunta
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: cm9vdA== # root
  MYSQL_PASSWORD: cm9vdA== # root
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
  namespace: distribuidas-conjunta
type: Opaque
data:
  RABBITMQ_PASSWORD: cm9vdHBhc3N3b3Jk # rootpassword
